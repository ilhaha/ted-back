<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="top.continew.admin.exam.mapper.ExamPlanMapper">

    <sql id="selectPlanPage">
        SELECT tep.id,
               tep.plan_year,
               tep.exam_plan_name,
               tep.start_time,
               tep.image_url,
               tep.end_time,
               tep.max_candidates,
               tep.actual_candidates,
               tep.status,
               tep.approval_time,
               tep.create_user,
               tep.update_user,
               CASE
                   WHEN tep.update_user IS NOT NULL THEN su.nickname
                   ELSE NULL
                   END AS approvedUser,
               tep.create_time,
               tep.update_time,
               tep.exam_fee,
               tel.location_name,
               tp.project_name,
               tep.exam_project_id,
               tep.location_id
        FROM ted_exam_plan tep
                 LEFT JOIN ted_exam_location tel ON tel.id = tep.location_id
                 LEFT JOIN ted_project tp ON tp.id = tep.exam_project_id
                 LEFT JOIN sys_user su ON tep.update_user IS NOT NULL AND su.id = tep.update_user
    </sql>
    <insert id="savePlanClassroom">
        INSERT INTO ted_plan_classroom (plan_id, classroom_id)
        VALUES
        <foreach collection="classroomId" item="cid" separator=",">
            (#{planId}, #{cid})
        </foreach>
    </insert>
    <delete id="deletePLanExamClassroom">
        DELETE
        FROM ted_plan_classroom
        WHERE plan_id = #{planId}
    </delete>

    <select id="selectExamPlanPage" resultType="top.continew.admin.exam.model.resp.ExamPlanDetailResp">
        <include refid="selectPlanPage"/>
        ${ew.customSqlSegment}
    </select>

    <select id="selectDetailById" resultType="top.continew.admin.exam.model.resp.ExamPlanDetailResp">
        SELECT tep.id,
               tep.plan_year,
               tep.start_time,
               tep.image_url,
               tep.exam_plan_name,
               tep.end_time,
               tep.max_candidates,
               tep.actual_candidates,
               tep.enroll_start_time,
               tep.enroll_end_time,
               tep.status,
               tep.approval_time,
               tep.create_user,
               tep.update_user,
               tep.create_time,
               tep.update_time,
               tel.location_name,
               tp.project_name,
               tep.exam_project_id,
               tep.location_id,
               tp.exam_duration
        FROM ted_exam_plan tep
                 LEFT JOIN ted_exam_location as tel ON tel.id = tep.location_id
                 LEFT JOIN ted_project as tp ON tp.id = tep.exam_project_id
        WHERE tep.is_deleted = 0
          and tep.id = #{id}
    </select>
    <select id="selectAllList" resultType="top.continew.admin.exam.model.entity.ExamPlanDO">
        SELECT *
        FROM ted_exam_plan
        WHERE is_deleted = 0
          and status = 3
    </select>
    <select id="getPlanExamClassroom" resultType="java.lang.Long">
        SELECT classroom_id
        FROM ted_plan_classroom
        WHERE plan_id = #{planId}
    </select>
    <select id="getInfo" resultType="top.continew.admin.exam.model.vo.ExamPlanVO">
        SELECT tep.id,
               tep.plan_year,
               tep.start_time,
    </select>
    <select id="hasClassroomTimeConflict" resultType="java.lang.Integer">
        SELECT COUNT(tep.id)
        FROM ted_exam_plan tep
        LEFT JOIN ted_plan_classroom tpc ON tep.id = tpc.plan_id
        WHERE tep.`status` NOT IN (4, 6)
        AND tep.is_deleted = 0
        AND tpc.classroom_id IN
        <foreach collection="classroomId" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        AND #{startTime} &lt; DATE_SUB(tep.end_time, INTERVAL 30 MINUTE)
        AND #{endTime} &gt; DATE_ADD(tep.start_time, INTERVAL 30 MINUTE)
    </select>
    <select id="getPlanLocationIdsById" resultType="java.lang.Long">
        SELECT DISTINCT tlc.location_id
        FROM ted_exam_plan tep
        LEFT JOIN ted_plan_classroom tpc ON tep.id = tpc.plan_id
        LEFT JOIN ted_location_classroom tlc ON tpc.classroom_id = tlc.classroom_id AND tlc.is_deleted = 0
        WHERE tep.id IN
        <foreach collection="planIds" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        AND tep.is_deleted = 0
    </select>
    <select id="orgGetPlanList" resultType="top.continew.admin.exam.model.vo.OrgExamPlanVO">
        SELECT tep.id                                       AS exam_plan_id,
               tep.*,
               tp.id AS project_id,
               tp.project_name,
               tp.project_code,
               tp.exam_duration,
               tc.`name`                                    AS category_name,
               (tep.max_candidates - COUNT(DISTINCT te.id)) AS remaining_slots
        FROM ted_exam_plan tep
                 LEFT JOIN ted_project tp
                           ON tep.exam_project_id = tp.id AND tp.is_deleted = 0
                 LEFT JOIN ted_category tc
                           ON tp.category_id = tc.id AND tc.is_deleted = 0
                 LEFT JOIN ted_org_category_relation tocr
                           ON tp.category_id = tocr.category_id AND tocr.is_deleted = 0
                 LEFT JOIN ted_org_user tou
                           ON tocr.org_id = tou.org_id AND tou.is_deleted = 0
                 LEFT JOIN ted_enroll te
                           ON tep.id = te.exam_plan_id AND te.enroll_status = 1 AND te.is_deleted = 0 ${ew.customSqlSegment}
          AND tep.is_deleted = 0
          AND tou.user_id = #{userId}
        GROUP BY tep.id;
    </select>
</mapper>