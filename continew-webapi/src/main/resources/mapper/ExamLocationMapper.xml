<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="top.continew.admin.exam.mapper.ExamLocationMapper">
    <select id="getAllExamLocation" resultType="top.continew.admin.exam.model.resp.ExamLocationResp">
        SELECT * FROM ted_exam_location as tel
        <choose>
            <when test="select.sorts != null and select.sorts.size > 0">
                ORDER BY
                <foreach collection="select.sorts" item="sort" separator=",">
                    ${sort.property} ${sort.direction}
                </foreach>
            </when>
            <otherwise>
                ORDER BY tel.create_time DESC
            </otherwise>
        </choose>
    </select>

    <select id="selectExamLocationPage" resultType="top.continew.admin.exam.model.resp.ExamLocationDetailResp">
        SELECT t1.id,
               t1.location_name,
               t1.detailed_address,
               t1.operational_status,
               t1.create_user,
               t1.update_user,
               t1.create_time,
               t1.update_time,
               t1.province_id,
               t1.city_id,
               t2.district as province_name,
               t3.district as city_name,
               t4.district as street_name
        FROM ted_exam_location as t1
        LEFT JOIN ted_rc_district as t2 on t1.province_id = t2.district_id
        LEFT JOIN ted_rc_district as t3 on t1.city_id = t3.district_id
        LEFT JOIN ted_rc_district as t4 on t1.street_id = t4.district_id
        ${ew.customSqlSegment}
    </select>

    <select id="getExamLocationDetail" resultType="top.continew.admin.exam.model.resp.ExamLocationDetailResp">
        SELECT t1.id,
               t1.location_name,
               t1.detailed_address,
               t1.operational_status,
               t1.create_user,
               t1.update_user,
               t1.create_time,
               t1.update_time,
               t1.province_id,
               t1.city_id,
               t2.district as province_name,
               t3.district as city_name,
               t4.name as createUserString,
               t4.name as updateUserString,
               t5.district as street_name,
               t5.district_id as street_id
        FROM ted_exam_location as t1
                 LEFT JOIN ted_rc_district AS t2 ON t1.province_id = t2.district_id
                 LEFT JOIN ted_rc_district AS t3 ON t1.city_id = t3.district_id
                 LEFT JOIN ted_rc_district AS t5 ON t1.street_id = t5.district_id
                 LEFT JOIN sys_role AS t4 ON t1.create_user = t4.id
        WHERE t1.is_deleted = 0 and t1.id = #{id}
    </select>
    <select id="getLocationSelect" resultType="top.continew.admin.exam.model.vo.ProjectVo">
        SELECT el.id AS `value`, el.location_name AS `label` FROM ted_exam_location AS el
        LEFT JOIN ted_proj_loc_assoc AS tpla ON tpla.location_id = el.id
        WHERE el.is_deleted = 0
        AND tpla.is_deleted = 0
        <if test="projectId != null">
            AND tpla.project_id = #{projectId}
        </if>
        AND el.operational_status = 0
    </select>
    <select id="getClassRoomSelect" resultType="top.continew.admin.exam.model.vo.ProjectVo">
        select c.id as `value`,
               c.classroom_name as `label`
        from ted_classroom c
            left join ted_location_classroom lc
                on c.id = lc.classroom_id
        where c.is_deleted = 0
          and lc.location_id = #{locationId}
          and c.exam_type = #{examType}
    </select>
</mapper>